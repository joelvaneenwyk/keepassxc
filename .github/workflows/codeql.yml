name: "CodeQL"

on:
  push:
    branches: [main, develop, release/2.7.x]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '5 16 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        # Analyzes C and C++ code using the commands in `Build C and C++ code`
        - language: c-cpp
          build-mode: manual

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - if: matrix.build-mode == 'manual'
      name: Install dependencies
      run: |
        sudo apt update
        sudo apt install --no-install-recommends --yes \
          build-essential cmake g++
          qtbase5-dev qtbase5-private-dev qttools5-dev \
          qttools5-dev-tools libqt5svg5-dev libargon2-dev \
          libkeyutils-dev libminizip-dev libbotan-2-dev \
          libqrencode-dev zlib1g-dev asciidoctor libreadline-dev \
          libpcsclite-dev libusb-1.0-0-dev libxi-dev libxtst-dev \
          libqt5x11extras5-dev

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - if: matrix.build-mode == 'manual'
      name: Build C++
      run: |
        mkdir build && cd build
        cmake -DWITH_XC_ALL=ON -DWITH_TESTS=OFF ..
        make -j $(nproc)

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
